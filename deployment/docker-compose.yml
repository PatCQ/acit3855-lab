version: '3.3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181"
    hostname: zookeeper
    volumes:
      - /home/azureuser/zookeeper/data:/opt/zookeeper-3.4.13/data

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: acit3855-kafka.eastus2.cloudapp.azure.com # docker-machine ip
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://acit3855-kafka.eastus2.cloudapp.azure.com:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOGS_DIRS: /kafka/kafka-logs
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/azureuser/kafka:/kafka/kafka-logs-kafka 
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s
    depends_on:
      - "zookeeper"

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'events'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'ASDFjkl12#'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--host=localhost", "--user=root", "--password=ASDFjkl12#"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s
    volumes:
      - my-db:/var/lib/mysql

  receiver:
    image: receiver:latest
    ports:
      - "8080:8080"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/azureuser/config/receiver:/config
      - /home/azureuser/logs:/logs
    depends_on:
      kafka:
        condition: service_healthy

  storage:
    image: storage:latest
    ports:
      - "8090:8090"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/azureuser/config/storage:/config
      - /home/azureuser/logs:/logs
    depends_on:
      kafka:
        condition: service_healthy
      db:
        condition: service_healthy

  processor:
    image: processing:latest
    ports:
      - "8100:8100"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/azureuser/config/processor:/config
      - /home/azureuser/logs:/logs
      - processing-db:/data
    network_mode: "host"
    depends_on:
      - "storage"
  
  analyzer:
    image: analyzer:latest
    ports:
      - "8110:8110"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/azureuser/config/analyzer:/config
      - /home/azureuser/logs:/logs
    depends_on:
      - "kafka"
  
  dashboard:
    image: dashboard:latest
    ports: 
      - "3000:3000"
    depends_on:
      - "processor"
      - "analyzer"
volumes:
  my-db:
  processing-db: